{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","types/Select.ts","components/TodoModal/TodoModal.tsx","components/helpers/helper.ts","App.tsx","index.tsx"],"names":["TodoList","todos","onSelectTodo","todoSelected","className","map","todo","id","completed","title","type","onClick","TodoFilter","onQuery","query","onStatus","status","value","onChange","event","target","placeholder","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Select","TodoModal","onClose","useState","loadedInfo","isLoadedInfo","user","setUser","useEffect","userId","userFromTodo","finally","href","email","name","App","todosFromAPI","setTodosFromAPI","isLoading","setIsLoading","todoChosen","setTodoChosen","setQuery","setStatus","todosToRender","useMemo","todosToProceed","filter","toLowerCase","includes","trim","ACTIVE","COMPLETED","filterTodos","newQuery","givenStatus","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.265df228.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onSelectTodo: (todo: Todo) => void;\n  todoSelected: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = (\n  { todos, onSelectTodo, todoSelected },\n) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => (\n        <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={\n              todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'\n            }\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelectTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className={\n                  todoSelected?.id !== todo.id\n                    ? 'far fa-eye'\n                    : 'far fa-eye-slash'\n                }\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { Select } from '../../types/Select';\n\ntype Props = {\n  onQuery: (query: string) => void;\n  query: string;\n  onStatus: (value: Select) => void;\n  status: string;\n};\n\nexport const TodoFilter: React.FC<Props> = (\n  {\n    onQuery, query, onStatus, status,\n  },\n) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={status}\n          onChange={(event) => onStatus(event.target.value as Select)}\n        >\n          <option value=\"all\">\n            All\n          </option>\n\n          <option value=\"active\">\n            Active\n          </option>\n\n          <option value=\"completed\">\n            Completed\n          </option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => onQuery(event?.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\">\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onQuery('')}\n          >\n            Clear\n          </button>\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum Select {\n  ALL = 'all',\n  COMPLETED = 'completed',\n  ACTIVE = 'active',\n}\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo;\n  onClose: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose }) => {\n  const [loadedInfo, isLoadedInfo] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then((userFromTodo) => setUser(userFromTodo))\n      .finally(() => isLoadedInfo(true));\n  });\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!loadedInfo ? (\n        <Loader />\n      ) : (user && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            >\n              Close\n            </button>\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                todo.completed\n                  ? (<strong className=\"has-text-success\">Done</strong>)\n                  : (<strong className=\"has-text-danger\">Planned</strong>)\n              }\n              {' by '}\n\n              <a href={user.email}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )\n      )}\n    </div>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { Select } from '../../types/Select';\n\nexport const filterTodos = (\n  todosFromAPI: Todo[],\n  query: string,\n  status: Select,\n): Todo[] => {\n  let todosToProceed = [...todosFromAPI];\n\n  if (query) {\n    todosToProceed = todosToProceed.filter(\n      (todo) => todo.title.toLowerCase().includes(query.toLowerCase().trim()),\n    );\n  }\n\n  if (status) {\n    switch (status) {\n      case Select.ACTIVE: {\n        todosToProceed = todosToProceed.filter((todo) => !todo.completed);\n        break;\n      }\n\n      case Select.COMPLETED: {\n        todosToProceed = todosToProceed.filter((todo) => todo.completed);\n        break;\n      }\n\n      default: {\n        return todosToProceed;\n      }\n    }\n  }\n\n  return todosToProceed;\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Select } from './types/Select';\nimport { filterTodos } from './components/helpers/helper';\n\nexport const App: React.FC = () => {\n  const [todosFromAPI, setTodosFromAPI] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [todoChosen, setTodoChosen] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState<string>('');\n\n  useEffect(() => {\n    getTodos()\n      .then((todos) => {\n        setTodosFromAPI(todos);\n      })\n      .finally(() => setIsLoading(true));\n  }, []);\n\n  const todosToRender: Todo[] = useMemo(\n    () => filterTodos(todosFromAPI, query, status as Select),\n    [todosFromAPI, query, status],\n  );\n\n  const handleQuery = (newQuery: string) => {\n    setQuery(newQuery);\n  };\n\n  const handleSelect = (givenStatus: string) => {\n    setStatus(givenStatus);\n  };\n\n  const resetTodo = () => {\n    setTodoChosen(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onQuery={handleQuery}\n                query={query}\n                onStatus={handleSelect}\n                status={status}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <TodoList\n                  todos={todosToRender}\n                  onSelectTodo={setTodoChosen}\n                  todoSelected={todoChosen}\n                />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todoChosen && (\n        <TodoModal\n          todo={todoChosen}\n          onClose={resetTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}